<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on sausheong&#39;s space</title>
    <link>https://sausheong.github.io/posts/</link>
    <description>Recent content in Posts on sausheong&#39;s space</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>&amp;copy; &lt;a href=&#34;https://github.com/sausheong&#34;&gt;Chang Sau Sheong&lt;/a&gt; 2018</copyright>
    <lastBuildDate>Tue, 01 May 2018 23:33:07 +0800</lastBuildDate>
    
	<atom:link href="https://sausheong.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Building simple artificial neural networks with TensorFlow, Keras, PyTorch and MXNet/Gluon</title>
      <link>https://sausheong.github.io/posts/building-neural-networks-with-tensorflow-keras-pytorch-mxnet/</link>
      <pubDate>Tue, 01 May 2018 23:33:07 +0800</pubDate>
      
      <guid>https://sausheong.github.io/posts/building-neural-networks-with-tensorflow-keras-pytorch-mxnet/</guid>
      <description>A few weeks ago I went through the steps of building a very simple neural network and implemented it from scratch in Go. However there are many deep learning frameworks that are already available, so doing it from scratch isn&amp;rsquo;t normally what you&amp;rsquo;ll do if you want to use deep learning as a tool to solve problems.
The question is with the many that deep learning frameworks, which one should I use?</description>
    </item>
    
    <item>
      <title>How to build a simple artificial neural network with Go</title>
      <link>https://sausheong.github.io/posts/how-to-build-a-simple-artificial-neural-network-with-go/</link>
      <pubDate>Sat, 24 Mar 2018 01:51:07 +0800</pubDate>
      
      <guid>https://sausheong.github.io/posts/how-to-build-a-simple-artificial-neural-network-with-go/</guid>
      <description>I have written a lot of computer programs in my career, most of the time to solve various problems or perform some tasks (or sometimes just for fun). For most part, other than bugs, as long as I tell the computer what to do very clearly (in whichever the programming language I use) it will obediently follow my instructions.
This is because computer programs are really good at executing algorithms &amp;ndash; instructions that follow defined steps and patterns that are precise and often repetitious.</description>
    </item>
    
    <item>
      <title>Writing Space Invaders with Go</title>
      <link>https://sausheong.github.io/posts/space-invaders-with-go/</link>
      <pubDate>Thu, 01 Feb 2018 01:15:07 +0800</pubDate>
      
      <guid>https://sausheong.github.io/posts/space-invaders-with-go/</guid>
      <description>The earliest memory I had of arcade video games was watching my older brother and cousins going at the video game machines at Genting Highlands. While our parents were at the other types of games Genting Highlands was more popularly known for, we were generally let loose to play arcade games to our hearts&amp;rsquo; content.
Those were the magical days of Pac-Man, Space Invaders, Galaxian, Donkey Kong, Frogger, Centipede and many, many more.</description>
    </item>
    
    <item>
      <title>Flocking with Go</title>
      <link>https://sausheong.github.io/posts/flocking-with-go/</link>
      <pubDate>Mon, 15 Jan 2018 01:04:07 +0800</pubDate>
      
      <guid>https://sausheong.github.io/posts/flocking-with-go/</guid>
      <description>I have been writing flocking simulations for a long time. I played around with it with Java but the earliest one I still have record of was with JRuby and Swing called Utopia. I wrote one using Shoes and that was the one in my Exploring Everyday Things witn R and Ruby book. Some time after (I was unhappy with Shoes in general), I re-wrote it again using Gosu, a 2D game development library for Ruby and C++.</description>
    </item>
    
    <item>
      <title>A gentle introduction to genetic algorithms</title>
      <link>https://sausheong.github.io/posts/a-gentle-introduction-to-genetic-algorithms/</link>
      <pubDate>Sat, 06 Jan 2018 23:33:07 +0800</pubDate>
      
      <guid>https://sausheong.github.io/posts/a-gentle-introduction-to-genetic-algorithms/</guid>
      <description>It may not seem obvious at first glance, but computer science algorithms are often inspired by nature and biological processes. Some of these algorithms include neural networks, particle swarm optimization, artificial bee colony, ant colony optimization, evolutionary algorithms and many more. In fact, you can consider biological processes to be simply algorithms that nature have come up with to solve problems. From that point of view it&amp;rsquo;s easy to see why many of these algorithms are optimization heuristics and metaheuristics.</description>
    </item>
    
  </channel>
</rss>